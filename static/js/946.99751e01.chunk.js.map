{"version":3,"file":"static/js/946.99751e01.chunk.js","mappings":"iKAOA,IAJe,WACZ,IACF,C,0GCJD,EAA4B,gCAA5B,EAAsE,8B,SCAtE,EAA6B,8BAA7B,EAA4E,kCAA5E,EAAkI,qCAAlI,EAAgM,0CAAhM,EAAoP,2B,SCsDpP,EAjDkB,SAAC,GAAe,IAAbA,EAAY,EAAZA,MACbC,EAAW,IAAIC,KAAKF,EAAMG,cAChC,OACE,iCACE,qBAASC,UAAWC,EAApB,WACE,gBACED,UAAWC,EACXC,IAAG,yCAAoCN,EAAMO,aAC7CC,IAAG,8BAAyBR,EAAMS,OAClCC,QAAQ,UAEV,4BACE,kCAAQV,EAAMS,MAAd,aAAwBR,EAASU,cAAjC,QACA,6CAAmBC,KAAKC,MAA2B,GAArBb,EAAMc,cAApC,QAEA,wBAAI,cACJ,uBAAId,EAAMe,YACV,wBAAI,YACJ,eAAIX,UAAWC,EAAf,SACGL,EAAMgB,OAAOC,KAAI,SAAAC,GAChB,OACE,eAAId,UAAWC,EAAf,SACGa,EAAKC,MADwCD,EAAKE,GAIxD,aAIP,gCACE,iBAAKhB,UAAWC,EAAhB,WACE,wBAAI,4BACJ,2BACE,yBACE,SAAC,KAAD,CAAMgB,GAAG,OAAT,SAAgB,YAElB,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,SAAmB,qBAIzB,SAAC,EAAAC,SAAD,CAAUC,UAAU,yBAAK,eAAzB,UACE,SAAC,KAAD,WAKT,ECFD,EA7CqB,WAAO,IAAD,IACjBC,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAO1B,EAAP,KAAc2B,EAAd,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOhB,EAAP,KAAgBkB,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAEMC,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WA2BpD,OAzBAC,EAAAA,EAAAA,YAAU,WACRT,GAAW,GACXU,MAAM,sCAAD,OAAuCd,EAAvC,mBAAiE,CACpEe,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,gOAGHC,MAAK,SAAAC,GACJ,OAAIA,EAAIC,GACCD,EAAIE,OAENC,QAAQC,OAAO,IAAIC,MAAJ,mBACvB,IACAN,MAAK,SAAA3C,GACJ2B,EAAS3B,EACV,IACAkD,OAAM,SAAArB,GACLC,EAASD,EACV,IACAsB,QAAQvB,GAAW,GACvB,GAAE,CAACJ,KAGF,iBAAKpB,UAAWC,EAAhB,WACE,SAAC,KAAD,CAAMgB,GAAIY,EAAamB,QAAShD,UAAWC,EAA3C,SAAwD,YACvDwB,IAAS,wBAAKA,EAAMwB,UACpB3C,IAAW,SAAC,IAAD,IACXV,IAAS,SAAC,EAAD,CAAWA,MAAOA,MAGjC,C","sources":["components/loader.jsx","webpack://react-homework-template/./src/pages/movieDetails/movieDetails.module.css?e7cd","webpack://react-homework-template/./src/pages/movieItem/movieItem.module.css?c18b","pages/movieItem/movieItem.jsx","pages/movieDetails/movieDetails.jsx"],"sourcesContent":["import React from 'react';\nimport { InfinitySpin } from 'react-loader-spinner';\n\nconst Loader = () => {\n  <InfinitySpin width=\"200\" color=\"#4fa94d\" />;\n};\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"conteiner\":\"movieDetails_conteiner__i8sE4\",\"backBtn\":\"movieDetails_backBtn__7ulZg\"};","// extracted by mini-css-extract-plugin\nexport default {\"about_film\":\"movieItem_about_film__GXCNk\",\"about_film_img\":\"movieItem_about_film_img__Iuv12\",\"about_film_genres\":\"movieItem_about_film_genres__5pj45\",\"about_film_genres_item\":\"movieItem_about_film_genres_item__y1lk2\",\"details\":\"movieItem_details__GhgiF\"};","import { Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport css from './movieItem.module.css';\nimport { Link, Outlet } from 'react-router-dom';\n\n\nconst MovieItem = ({ movie }) => {\n  const filmDate = new Date(movie.release_date);\n  return (\n    <>\n      <section className={css.about_film}>\n        <img\n          className={css.about_film_img}\n          src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n          alt={`poster of the movie ${movie.title}`}\n          loading=\"lazy\"\n        />\n        <div>\n          <h1>{`${movie.title} (${filmDate.getFullYear()})`}</h1>\n          <p>{`User Score: ${Math.round(movie.vote_average * 10)}%`}</p>\n\n          <h2>Overview</h2>\n          <p>{movie.overview}</p>\n          <h3>Genres</h3>\n          <ul className={css.about_film_genres}>\n            {movie.genres.map(genr => {\n              return (\n                <li className={css.about_film_genres_item} key={genr.id}>\n                  {genr.name}\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </section>\n      <section>\n        <div className={css.details}>\n          <h4>Additional information</h4>\n          <ul>\n            <li>\n              <Link to=\"cast\">Cast</Link>\n            </li>\n            <li>\n              <Link to=\"reviews\">Reviews</Link>\n            </li>\n          </ul>\n        </div>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Outlet />\n          </Suspense>\n      </section>\n    </>\n  );\n};\n\nexport default MovieItem;\n\nMovieItem.propTypes = {\n  movie: PropTypes.object.isRequired,\n}","import { useEffect, useRef, useState } from 'react';\nimport { useParams, Link, useLocation } from 'react-router-dom';\nimport css from './movieDetails.module.css'\nimport Loader from '../../components/loader';\nimport MovieItem from '../movieItem/movieItem';\n\nconst MovieDetails = () => {\n  const { movieID } = useParams();\n\n  const [movie, setMovie] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const location = useLocation();\n  const locationLink = useRef(location.state?.from ?? '/movies')\n\n  useEffect(() => {\n    setLoading(true);\n    fetch(`https://api.themoviedb.org/3/movie/${movieID}?language=en-US`, {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3ZmNkOTM1ZjZkZjQ5YTgwOWFjNzg0NTk2MmM3NGQ0ZCIsInN1YiI6IjY0NzMwN2E0YTE5OWE2MDBiZjI5ZTVlZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.250sjm96Er0JgnZyU-7UbzMGl38okKHn9DWdgi3aWgA',\n      },\n    })\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject(new Error(`Movie not found`));\n      })\n      .then(movie => {\n        setMovie(movie);\n      })\n      .catch(error => {\n        setError(error);\n      })\n      .finally(setLoading(false));\n  }, [movieID]);\n\n  return (\n    <div className={css.conteiner}>\n      <Link to={locationLink.current} className={css.backBtn}>Go back</Link>\n      {error && <h1>{error.message}</h1>}\n      {loading && <Loader />}\n      {movie && <MovieItem movie={movie} />}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["movie","filmDate","Date","release_date","className","css","src","poster_path","alt","title","loading","getFullYear","Math","round","vote_average","overview","genres","map","genr","name","id","to","Suspense","fallback","movieID","useParams","useState","setMovie","setLoading","error","setError","location","useLocation","locationLink","useRef","state","from","useEffect","fetch","method","headers","accept","Authorization","then","res","ok","json","Promise","reject","Error","catch","finally","current","message"],"sourceRoot":""}