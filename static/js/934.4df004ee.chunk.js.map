{"version":3,"file":"static/js/934.4df004ee.chunk.js","mappings":"iKAOA,IAJe,WACZ,IACF,C,wGC0DD,UA1Da,WACX,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MA8BjB,OA5BAC,EAAAA,EAAAA,YAAU,WACRL,GAAW,GACXM,MAAM,iEAAkE,CACtEC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,gOAGHC,MAAK,SAAAC,GACJ,OAAIA,EAAIC,GACCD,EAAIE,OAENC,QAAQC,OAAO,IAAIC,MAAJ,6BACvB,IACAN,MAAK,SAAAO,GAEJpB,GAAU,SAAAqB,GACR,OAAO,OAAID,EAAME,QAClB,GACF,IACAC,OAAM,SAAApB,GACLC,EAASD,EACV,IACAqB,QAAQtB,GAAW,GACvB,GAAE,KAGD,2BACGC,IAAS,wBAAKA,EAAMsB,UACpBxB,IAAW,SAAC,IAAD,KACZ,eAAIyB,UAAWC,EAAAA,EAAAA,kBAAf,SAAsC,oBACtC,eAAID,UAAWC,EAAAA,EAAAA,YAAf,SACG5B,EAAO6B,KAAI,SAAAR,GACV,OACE,yBACE,UAAC,KAAD,CAAMS,GAAE,iBAAYT,EAAMU,IACxBT,MAAO,CAAEU,KAAM1B,GACfqB,UAAWC,EAAAA,EAAAA,iBAFb,WAGE,gBAAKK,IAAG,yCAAoCZ,EAAMa,aAChDC,IAAKP,EAAAA,EAAAA,iBAAsBD,UAAWC,EAAAA,EAAAA,mBACxC,iBAAMD,UAAWC,EAAAA,EAAAA,iBAAjB,SAAwCP,EAAMe,qBANzCf,EAAMU,GAUlB,QAIR,C,oBC5DD,KAAgB,kBAAoB,gCAAgC,iBAAmB,+BAA+B,iBAAmB,+BAA+B,gBAAkB,8BAA8B,YAAc,0B","sources":["components/loader.jsx","pages/home/home.jsx","webpack://react-homework-template/./src/pages/home/home.module.css?cea6"],"sourcesContent":["import React from 'react';\nimport { InfinitySpin } from 'react-loader-spinner';\n\nconst Loader = () => {\n  <InfinitySpin width=\"200\" color=\"#4fa94d\" />;\n};\n\nexport default Loader;\n","import { useEffect, useState } from 'react';\nimport css from './home.module.css';\nimport Loader from '../../components/loader';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    setLoading(true);\n    fetch('https://api.themoviedb.org/3/trending/movie/day?language=en-US', {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3ZmNkOTM1ZjZkZjQ5YTgwOWFjNzg0NTk2MmM3NGQ0ZCIsInN1YiI6IjY0NzMwN2E0YTE5OWE2MDBiZjI5ZTVlZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.250sjm96Er0JgnZyU-7UbzMGl38okKHn9DWdgi3aWgA',\n      },\n    })\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject(new Error(`Trending movies not found`));\n      })\n      .then(movie => {\n\n        setMovies(state => {\n          return [...movie.results];\n        });\n      })\n      .catch(error => {\n        setError(error);\n      })\n      .finally(setLoading(false));\n  }, []);\n\n  return (\n    <div>\n      {error && <h1>{error.message}</h1>}\n      {loading && <Loader />}\n      <h1 className={css.movies_list_title}>Trending today</h1>\n      <ul className={css.movies_list}>\n        {movies.map(movie => {\n          return (\n            <li key={movie.id} >\n              <Link to={`movies/${movie.id}`}\n                state={{ from: location }}\n                className={css.movies_list_item}>\n                <img src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n                  alt={css.movies_list_item} className={css.movies_list_img}></img>\n                <span className={css.movies_list_name}>{movie.original_title}</span>\n                </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Home;\n","// extracted by mini-css-extract-plugin\nexport default {\"movies_list_title\":\"home_movies_list_title__2fmlD\",\"movies_list_item\":\"home_movies_list_item__AEhf-\",\"movies_list_name\":\"home_movies_list_name__aHUwm\",\"movies_list_img\":\"home_movies_list_img__rpiK0\",\"movies_list\":\"home_movies_list__ET2tf\"};"],"names":["useState","movies","setMovies","loading","setLoading","error","setError","location","useLocation","useEffect","fetch","method","headers","accept","Authorization","then","res","ok","json","Promise","reject","Error","movie","state","results","catch","finally","message","className","css","map","to","id","from","src","poster_path","alt","original_title"],"sourceRoot":""}